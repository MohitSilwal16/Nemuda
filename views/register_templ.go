// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Register() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<html lang=\"en\"><head><title>Nemuda</title><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script><link rel=\"stylesheet\" href=\"../static/output.css\"></head><body class=\"w-screen h-screen text-2xl font-semibold text-white\"><div class=\"grid grid-rows-4 h-screen w-screen\"><h1 id=\"heading\" class=\"font-bold text-5xl sm:mt-36 mt-16 text-center\"></h1><form class=\"bg-transparent md:w-1/2 lg:w-1/4 h-3/4 m-10 rounded-xl p-10 row-span-3 container mx-auto backdrop-blur-md border shadow-2xl\" hx-post=\"/register\" hx-trigger=\"submit[onValidate()]\"><h1 class=\"flex justify-center text-4xl font-semibold mb-10\">Register\r</h1><label for=\"username\">Username:</label><div class=\"relative\"><input class=\"shadow-lg rounded-md pl-2.5 py-1 w-full text-black outline-0\" type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter name\" autofocus autocomplete=\"off\"> <img class=\"h-8 absolute right-3 top-1\" src=\"../static/images/profile.png\" alt=\"\"></div><p id=\"usernameError\" class=\"text-lg text-red-600\"></p><div class=\"h-5\"></div><label for=\"pass\">Password:</label><div class=\"relative\"><input class=\"shadow-lg rounded-md pl-2.5 py-1 w-full text-black outline-0\" type=\"password\" name=\"pass\" id=\"pass\" placeholder=\"********\"> <img class=\"h-8 absolute right-3 top-1\" src=\"../static/images/lock.png\" alt=\"\"></div><p id=\"passError\" class=\"text-lg text-red-600\"></p><input class=\"border-2 shadow-lg w-full py-2 rounded-full mt-8 cursor-pointer\" type=\"submit\" value=\"Submit\"><br><div class=\"h-8\"></div><a class=\"flex justify-center hover:underline text-blue-500\" href=\"\">Have an Account ?</a></form></div><script>\r\n      let str = \"Welcome to Nemu 2.0\";\r\n      let i = 0;\r\n\r\n      function addLetter() {\r\n        if (i < str.length) {\r\n          document.getElementById(\"heading\").innerHTML += str[i];\r\n          i++;\r\n          setTimeout(addLetter, 100);\r\n        } else {\r\n          setTimeout(removeLastLetters, 500); // Wait for 0.5 seconds\r\n        }\r\n      }\r\n\r\n      function removeLastLetters() {\r\n        let heading = document.getElementById(\"heading\");\r\n        let text = heading.innerHTML;\r\n\r\n        if (text.length > 11) {\r\n          heading.innerHTML = text.slice(0, -1);\r\n          setTimeout(removeLastLetters, 100);\r\n        } else {\r\n          setTimeout(addNemudaLetters, 500); // Wait for 0.5 seconds before adding \"Nemuda\"\r\n        }\r\n      }\r\n\r\n      function addNemudaLetters() {\r\n        let nemuda = \"Nemuda\";\r\n        let j = 0;\r\n\r\n        function addLetterNemuda() {\r\n          if (j < nemuda.length) {\r\n            document.getElementById(\"heading\").innerHTML += nemuda[j];\r\n            j++;\r\n            setTimeout(addLetterNemuda, 100);\r\n          }\r\n        }\r\n\r\n        addLetterNemuda();\r\n      }\r\n\r\n      addLetter();\r\n\r\n      function onValidate() {\r\n        let username = document.getElementById(\"username\");\r\n        let pass = document.getElementById(\"pass\");\r\n\r\n        if (username.value.trim() == \"\") {\r\n          document.getElementById(\"usernameError\").innerHTML =\r\n            \"This field is mandatory\";\r\n          username.focus();\r\n          return false;\r\n        }\r\n        document.getElementById(\"usernameError\").innerHTML = \"\";\r\n\r\n        pass.focus();\r\n        if (pass.value.trim() == \"\") {\r\n          document.getElementById(\"passError\").innerHTML =\r\n            \"This field is mandatory\";\r\n          return false;\r\n        }\r\n        document.getElementById(\"passError\").innerHTML = \"\";\r\n\r\n        return true;\r\n      }\r\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
